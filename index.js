let arr = [-7, -2, 1, 2, 3, 4, 5 , 5]

// - Сделайте из него массив, состоящий из квадратов этих чисел.
let sqrtArr = arr.map(item => item * item) //[ 36, 4, 1, 4, 9, 16, 25, 25 ]


// - Верните массив, состоящий только из уникальных значений(убрать все дубликаты, число в новом массиве не должно повторяться)
let unique_arr = [...new Set(arr)] // [ -6, -2, 1, 2, 3, 4, 5 ]


// - Проверьте то, что все элементы в массиве больше нуля (результат - true/false).
let isPositive = arr.find(item => item < 0) ? false : true  //false

// - Оставьте в нем только отрицательные числа.
let negativeArr = arr.filter(item => item < 0) //[ -7, -2 ]

// - Найдите сумму этих чисел.
let sum =   arr.reduce((sum, num) => sum + num, 0) //11


//  Дан массив, в нем могут быть обычные элементы и подмассивы(например [1, 2, [3, 4], 5, [3, 4], {a: 7}]). Оставьте в нем только подмассивы.
let secondArr = [1, 2, [3, 4], 5,[11, 9], {a: 7}]

let subArrays = secondArr.filter(item => Array.isArray(item)) //[ [ 3, 4 ], [ 11, 9 ] ]



// Верните количество слов в строке, длина которых больше 4 символов.
let str = 'Верните количество слов в строке, длина100028 которых больше 4 символов.'

let count = str.split(' ').reduce((count, str) => {
    if (str.length > 4) count++
    return count
}, 0) //8



// Если в строке имеется шестизначное число(ни больше, ни меньше) - верните его, как результат функции. Число может быть не отделено от других символов пробелами.
const get_number = (str) => {
    let result = str.match(/\D(\d{6})\D/);
    if (result) return result[1]
    return false
}

console.log(get_number(str))



